generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Room {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  type        String
  price       Float
  description String
  available   Boolean  @default(true)
  imageId     String?  @db.ObjectId
  capacity    Int      @default(2)
  amenities   String[] // Array of amenities like ["WiFi", "AC", "Pool", "Gym"]
  bedType     String   @default("Queen") // Single, Queen, King, Twin
  size        String?  // Room size in sq ft
  images      String[] // Multiple image URLs
  bookings    Booking[]
  reviews     Review[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Booking {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  roomId      String   @db.ObjectId
  userId      String   @db.ObjectId
  userName    String
  userEmail   String
  checkIn     DateTime
  checkOut    DateTime
  totalPrice  Float
  status      String   @default("confirmed") // confirmed, cancelled, completed
  paymentId   String?  // Stripe payment intent ID
  specialRequests String?
  room        Room     @relation(fields: [roomId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  password    String
  firstName   String?
  lastName    String?
  phone       String?
  isAdmin     Boolean   @default(false)
  loyaltyPoints Int     @default(0)
  preferences String[]  // User preferences like ["pool", "gym", "spa"]
  bookings    Booking[]
  reviews     Review[]
  auditLogs   AuditLog[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  roomId    String   @db.ObjectId
  rating    Int      // 1-5 stars
  comment   String?
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AuditLog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  action      String   // login, logout, booking_create, etc.
  resourceId  String?  // ID of the resource affected
  details     String?  // JSON string with additional details
  ipAddress   String?
  userAgent   String?
  timestamp   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
}